buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.60"
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.60"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

configurations {
    developmentOnly
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-graal"
    compileOnly "com.oracle.substratevm:svm"

    compile("io.micronaut:micronaut-router:1.1.1")
    compile("io.micronaut:micronaut-function:1.1.1")
    compile("io.micronaut:micronaut-security:1.1.1")
    compile("io.micronaut:micronaut-validation:1.1.1")
    compile("io.micronaut:micronaut-management:1.1.4")
    compile("com.amazonaws:aws-java-sdk-dynamodb:1.11.551")
    compile("org.slf4j:slf4j-simple:1.8+")

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-http-client"
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime") {
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
    }
    implementation("io.micronaut.aws:micronaut-function-aws-api-proxy") {
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
    }
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("io.micronaut:micronaut-runtime")

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt("io.micronaut:micronaut-inject-java")
    kapt("io.micronaut:micronaut-validation")

    runtimeOnly('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8')
    runtimeOnly('ch.qos.logback:logback-classic:1.2.3')
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

mainClassName = "com.example.disruptiveguestbook.DisruptiveGuestbookApplication"

allOpen {
    annotation("io.micronaut.aop.Around")
}

shadowJar {
    mergeServiceFiles()
}

task buildZip(type: Zip) {
    from sourceSets.main.output
    into("lib") {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}

shadowJar.dependsOn buildZip

